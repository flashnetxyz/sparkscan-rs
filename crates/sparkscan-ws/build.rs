use std::fs;
use std::path::Path;

fn main() {
    println!("cargo:rerun-if-changed=schemas/");

    let out_dir = std::env::var("OUT_DIR").unwrap();
    let dest_path = Path::new(&out_dir).join("types.rs");

    // Read all schema files
    let balance_schema = fs::read_to_string("schemas/balance_schema.json")
        .expect("Failed to read balance_schema.json");
    let token_balance_schema = fs::read_to_string("schemas/token_balance_schema.json")
        .expect("Failed to read token_balance_schema.json");
    let token_price_schema = fs::read_to_string("schemas/token_price_schema.json")
        .expect("Failed to read token_price_schema.json");
    let token_schema =
        fs::read_to_string("schemas/token_schema.json").expect("Failed to read token_schema.json");
    let transaction_schema = fs::read_to_string("schemas/transaction_schema.json")
        .expect("Failed to read transaction_schema.json");

    // Parse schemas into schemars::schema::RootSchema
    let balance_schema: schemars::schema::RootSchema =
        serde_json::from_str(&balance_schema).expect("Failed to parse balance_schema.json");
    let token_balance_schema: schemars::schema::RootSchema =
        serde_json::from_str(&token_balance_schema)
            .expect("Failed to parse token_balance_schema.json");
    let token_price_schema: schemars::schema::RootSchema =
        serde_json::from_str(&token_price_schema).expect("Failed to parse token_price_schema.json");
    let token_schema: schemars::schema::RootSchema =
        serde_json::from_str(&token_schema).expect("Failed to parse token_schema.json");
    let transaction_schema: schemars::schema::RootSchema =
        serde_json::from_str(&transaction_schema).expect("Failed to parse transaction_schema.json");

    // Create TypeSpace settings
    let mut settings = typify::TypeSpaceSettings::default();
    settings.with_struct_builder(true); // Enable builder pattern for structs

    // Generate types using typify
    let mut type_space = typify::TypeSpace::new(&settings);

    // Add schemas to the type space
    type_space
        .add_root_schema(balance_schema)
        .expect("Failed to add balance schema");

    type_space
        .add_root_schema(token_balance_schema)
        .expect("Failed to add token balance schema");

    type_space
        .add_root_schema(token_price_schema)
        .expect("Failed to add token price schema");

    type_space
        .add_root_schema(token_schema)
        .expect("Failed to add token schema");

    type_space
        .add_root_schema(transaction_schema)
        .expect("Failed to add transaction schema");

    // Generate the code
    let contents = format!(
        "{}\n{}",
        "// This file is generated by build.rs. Do not edit manually.",
        prettyplease::unparse(&syn::parse2(type_space.to_stream()).unwrap())
    );

    fs::write(&dest_path, contents).expect("Failed to write generated types");
}
